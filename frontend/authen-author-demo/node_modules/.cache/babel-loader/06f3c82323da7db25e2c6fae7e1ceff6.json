{"ast":null,"code":"var _jsxFileName = \"D:\\\\_Fall_2021\\\\_GMO\\\\code-demo\\\\GMO_Backend\\\\frontend\\\\authen-author-demo\\\\src\\\\pages\\\\signup.page.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport InputForm from \"../components/input/Input.component\";\nimport ButtonForm from \"../components/button/Button.comonent\";\nimport { useHttpCLient } from \"../hooks/http-hook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = _ref => {\n  _s();\n\n  let {\n    token,\n    onChange\n  } = _ref;\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpCLient();\n  const navigate = useNavigate();\n  const [nameValue, setNameValue] = useState(\"\");\n  const [emailValue, setEmailValue] = useState(\"\");\n  const [passwordValue, setPasswordValue] = useState(\"\");\n  const [imagePath, setImagePath] = useState('');\n\n  const signupHandler = async event => {\n    event.preventDefault();\n\n    try {\n      console.log(nameValue);\n      const formData = new FormData();\n      formData.append(\"name\", nameValue);\n      formData.append(\"email\", emailValue);\n      formData.append(\"password\", passwordValue);\n      formData.append(\"image\");\n      console.log(formData);\n      await sendRequest(\"http://localhost:3001/api/signup\", \"POST\", formData, {\n        Authorization: \"Bear\" + token\n      });\n      navigate(\"/\");\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"sign-up\",\n    onSubmit: signupHandler,\n    children: [/*#__PURE__*/_jsxDEV(InputForm, {\n      id: \"name\",\n      name: \"Name\",\n      type: \"text\",\n      value: nameValue,\n      onChange: e => onChange(e.currentTarget.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n      id: \"email\",\n      name: \"Email\",\n      type: \"email\",\n      value: emailValue,\n      onChange: e => onChange(e.currentTarget.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n      id: \"password\",\n      name: \"Password\",\n      type: \"password\",\n      value: passwordValue,\n      onChange: e => onChange(e.currentTarget.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n      id: \"image\",\n      name: \"Avatar\",\n      type: \"file\",\n      value: imagePath,\n      onChange: e => onChange(e.currentTarget.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonForm, {\n      title: \"Sign Up\",\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUp, \"P1WaywFRGlaRoWiu1SnG59hTT4M=\", false, function () {\n  return [useHttpCLient, useNavigate];\n});\n\n_c = SignUp;\n\nconst mapStateToProps = state => ({\n  token: state.auth.token\n});\n\nexport default connect(mapStateToProps)(SignUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["D:/_Fall_2021/_GMO/code-demo/GMO_Backend/frontend/authen-author-demo/src/pages/signup.page.jsx"],"names":["React","useState","connect","useNavigate","InputForm","ButtonForm","useHttpCLient","SignUp","token","onChange","isLoading","error","sendRequest","clearError","navigate","nameValue","setNameValue","emailValue","setEmailValue","passwordValue","setPasswordValue","imagePath","setImagePath","signupHandler","event","preventDefault","console","log","formData","FormData","append","Authorization","err","e","currentTarget","value","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport InputForm from \"../components/input/Input.component\";\r\nimport ButtonForm from \"../components/button/Button.comonent\";\r\nimport { useHttpCLient } from \"../hooks/http-hook\";\r\n\r\nconst SignUp = ({ token, onChange }) => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpCLient();\r\n  const navigate = useNavigate();\r\n\r\n  const [nameValue, setNameValue] = useState(\"\");\r\n  const [emailValue, setEmailValue] = useState(\"\");\r\n  const [passwordValue, setPasswordValue] = useState(\"\");\r\n  const [imagePath, setImagePath] = useState('');\r\n\r\n  const signupHandler = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      console.log(nameValue);\r\n      const formData = new FormData();\r\n      formData.append(\"name\", nameValue);\r\n      formData.append(\"email\", emailValue);\r\n      formData.append(\"password\", passwordValue);\r\n      formData.append(\"image\")\r\n\r\n      console.log(formData);\r\n\r\n      await sendRequest(\"http://localhost:3001/api/signup\", \"POST\", formData, {\r\n        Authorization: \"Bear\" + token,\r\n      });\r\n      navigate(\"/\");\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <form className=\"sign-up\" onSubmit={signupHandler}>\r\n      <InputForm\r\n        id=\"name\"\r\n        name=\"Name\"\r\n        type=\"text\"\r\n        value={nameValue}\r\n        onChange={(e) => onChange(e.currentTarget.value)}\r\n      />\r\n      <InputForm\r\n        id=\"email\"\r\n        name=\"Email\"\r\n        type=\"email\"\r\n        value={emailValue}\r\n        onChange={(e) => onChange(e.currentTarget.value)}\r\n      />\r\n      <InputForm\r\n        id=\"password\"\r\n        name=\"Password\"\r\n        type=\"password\"\r\n        value={passwordValue}\r\n        onChange={(e) => onChange(e.currentTarget.value)}\r\n      />\r\n\r\n      <InputForm\r\n        id=\"image\"\r\n        name=\"Avatar\"\r\n        type=\"file\"\r\n        value={imagePath}\r\n        onChange={(e) => onChange(e.currentTarget.value)}\r\n      />\r\n\r\n      <ButtonForm title=\"Sign Up\" type=\"submit\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  token: state.auth.token,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SignUp);\r\n"]},"metadata":{},"sourceType":"module"}