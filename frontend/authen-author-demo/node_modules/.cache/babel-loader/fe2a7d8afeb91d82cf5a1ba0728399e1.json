{"ast":null,"code":"var _jsxFileName = \"D:\\\\_Fall_2021\\\\_GMO\\\\code-demo\\\\GMO_Backend\\\\frontend\\\\authen-author-demo\\\\src\\\\pages\\\\signup.page.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from 'react-router-dom';\nimport InputForm from \"../components/input/Input.component\";\nimport ButtonForm from \"../components/button/Button.comonent\";\nimport { useHttpCLient } from \"../hooks/http-hook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = _ref => {\n  _s();\n\n  let {\n    token\n  } = _ref;\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpCLient();\n  const history = useHistory();\n  const [nameValue, setNameValue] = useState(\"\");\n  const [emailValue, setEmailValue] = useState(\"\");\n  const [passwordValue, setPasswordValue] = useState(\"\");\n\n  const signupHandler = async event => {\n    event.preventDefault();\n\n    try {\n      const formData = new FormData();\n      formData.append('name', nameValue);\n      formData.append('email', emailValue);\n      formData.append('password', passwordValue);\n      await sendRequest('http://localhost:3001/api/signup', 'POST', formData, {\n        Authorization: 'Bear' + token\n      });\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"sign-up\",\n    onSubmit: signupHandler,\n    children: [/*#__PURE__*/_jsxDEV(InputForm, {\n      id: \"name\",\n      name: \"Name\",\n      type: \"text\",\n      value: nameValue,\n      onChange: e => setNameValue(e.currentTarget.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n      id: \"email\",\n      name: \"Email\",\n      type: \"email\",\n      value: emailValue,\n      onChange: e => setEmailValue(e.currentTarget.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n      id: \"password\",\n      name: \"Password\",\n      type: \"password\",\n      value: passwordValue,\n      onChange: e => setPasswordValue(e.currentTarget.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonForm, {\n      title: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUp, \"sL0jr46Drys5tDVvWHFQ/Y8b4xY=\", false, function () {\n  return [useHttpCLient, useHistory];\n});\n\n_c = SignUp;\n\nconst mapStateToProps = state => ({\n  token: state.auth.token\n});\n\nexport default connect(mapStateToProps)(SignUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["D:/_Fall_2021/_GMO/code-demo/GMO_Backend/frontend/authen-author-demo/src/pages/signup.page.jsx"],"names":["React","useState","connect","useHistory","InputForm","ButtonForm","useHttpCLient","SignUp","token","isLoading","error","sendRequest","clearError","history","nameValue","setNameValue","emailValue","setEmailValue","passwordValue","setPasswordValue","signupHandler","event","preventDefault","formData","FormData","append","Authorization","err","e","currentTarget","value","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport InputForm from \"../components/input/Input.component\";\r\nimport ButtonForm from \"../components/button/Button.comonent\";\r\nimport { useHttpCLient } from \"../hooks/http-hook\";\r\n\r\nconst SignUp = ({ token }) => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpCLient();\r\n  const history = useHistory();\r\n\r\n  const [nameValue, setNameValue] = useState(\"\");\r\n  const [emailValue, setEmailValue] = useState(\"\");\r\n  const [passwordValue, setPasswordValue] = useState(\"\");\r\n\r\n  const signupHandler = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('name', nameValue);\r\n      formData.append('email', emailValue);\r\n      formData.append('password', passwordValue);\r\n\r\n      await sendRequest('http://localhost:3001/api/signup', 'POST', formData, {\r\n        Authorization: 'Bear' + token\r\n      });\r\n      \r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <form className=\"sign-up\" onSubmit={signupHandler}>\r\n      <InputForm\r\n        id=\"name\"\r\n        name=\"Name\"\r\n        type=\"text\"\r\n        value={nameValue}\r\n        onChange={(e) => setNameValue(e.currentTarget.value)}\r\n      />\r\n      <InputForm\r\n        id=\"email\"\r\n        name=\"Email\"\r\n        type=\"email\"\r\n        value={emailValue}\r\n        onChange={(e) => setEmailValue(e.currentTarget.value)}\r\n      />\r\n      <InputForm\r\n        id=\"password\"\r\n        name=\"Password\"\r\n        type=\"password\"\r\n        value={passwordValue}\r\n        onChange={(e) => setPasswordValue(e.currentTarget.value)}\r\n      />\r\n\r\n      <ButtonForm title=\"Sign Up\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  token: state.auth.token\r\n})\r\n\r\nexport default connect(mapStateToProps)(SignUp);\r\n"]},"metadata":{},"sourceType":"module"}